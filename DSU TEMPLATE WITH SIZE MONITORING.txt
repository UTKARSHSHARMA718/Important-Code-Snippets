//DSU TEMPLATE WITH SIZE MONITORING

class DSU{
        int parent[];
        int rank[];
        int size[];
        public DSU(int n){
            parent = new int[n+1];
            rank = new int[n+1];
            size= new int[n+1];
            for(int i=0;i<n+1;i++){
                parent[i] = i;
                rank[i] = 0;
                size[i] = 1;
            }
        }
        
        
        public int find(int a){
            if(a == parent[a])
                return a;
            return parent[a] = find(parent[a]);
        }
        
        
        public void union(int u,int v){
            int pu = find(u);
            int pv = find(v);
            
            if(pu == pv){
                return;
            }
            
            if(rank[pu] < rank[pv]){
                parent[pu] = pv;
                size[pv]+= size[pu];
            }
            else if(rank[pv] < rank[pu]){
                parent[pv] = pu;
                size[pu]+= size[pv];
            }
            else{
                parent[pv] = pu;
                rank[pu]++;
                size[pu]+= size[pv];
            }
        }
        
    }
