
static class sparse_table{
        int n;
        int LOG;

        int table[][];
        public sparse_table(int arr[]){
            this.LOG = (int)(Math.log(arr.length)/Math.log(2));
            this.n=arr.length;
            table = new int[n+1][LOG+1];
            for (int i = 0; i < arr.length; i++) {
                table[i][0] = arr[i];
            }
        }

        public void build(){
            for (int power = 1; power <= LOG; power++) {
                for (int i = 0; i + (1 << power) - 1 < n; i++) {
                    table[i][power] =  Math.max(table[i][power-1],table[i+(1<<(power-1))][power-1]);
                }
            }
        }

        public long query(int l, int r){
            int len = (r-l+1);
            int log = (int)(Math.log(len)/Math.log(2));
            return Math.max(table[l][log],table[r - (1<<log) + 1][log]);
        }

    }
